<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Cache;
use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
        'image',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function balances(): HasMany
    {
        return $this->hasMany(Balance::class, 'user_id', 'id');
    }

    public function expenses(): HasMany
    {
        return $this->hasMany(Expense::class, 'user_id', 'id');
    }

    public function methods(): HasMany
    {
        return $this->hasMany(Method::class, 'user_id', 'id');
    }

    public function loans(): HasMany
    {
        return $this->hasMany(Loan::class, 'user_id', 'id');
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::created(function ($model) {
            $model->methods()->insert([
                [
                    'user_id' => $model->id,
                    'name' => 'Bank',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
                [
                    'user_id' => $model->id,
                    'name' => 'bKash',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
                [
                    'user_id' => $model->id,
                    'name' => 'Rocket',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
                [
                    'user_id' => $model->id,
                    'name' => 'Nagad',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
                [
                    'user_id' => $model->id,
                    'name' => 'uPay',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
                [
                    'user_id' => $model->id,
                    'name' => 'Other',
                    'created_at' => now(),
                    'updated_at' => now(),
                ],
            ]);
        });
    }

    public function registrationMonth()
    {
        return Cache::rememberForever('registration_month_user_' . $this->getOriginal('id'), function () {
            return Carbon::parse($this->getOriginal('created_at'))->monthName;
        });
    }
}
